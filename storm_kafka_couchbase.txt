http://zdatainc.com/2014/07/real-time-streaming-apache-storm-apache-kafka/ (Very Important)
couchbase:
/opt/couchbase/var/lib/couchbase/config/config.dat (To remove old configurations)
/etc/init.d/couchbase-server status
/opt/couchbase/lib/ns_server/erlang/lib/ns_server/priv/public/js (js file doc limit)

mvn -f m2-pom.xml package
sudo /usr/share/zookeeper/bin/zkServer.sh start
bin/storm nimbus &
bin/storm supervisor &
bin/storm ui &
bin/storm jar ~/bigbata/project/storm-starter/target/storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar storm.starter.WordCountTopology WordCount
pkill -f 'storm' (kill all process by name)
Kafka:
~/kafka (kafka location)
~/kafka/kafka.log (server log location)
bin/kafka-server-start.sh config/server.properties &
nohup ~/kafka/bin/kafka-server-start.sh ~/kafka/config/server.properties > ~/kafka/kafka.log 2>&1 & (server start)
~/kafka/bin/kafka-console-producer.sh --broker-list localhost:9092 --topic TutorialTopic > /dev/null (create topic)
~/kafka/bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic TutorialTopic --from-beginning (consume topic)

Topics creates:
kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic truckevent
kafka-topics.sh --list --zookeeper localhost:2181


#############################
Kafka
 1. There cannot be more consumer instances in a consumer group than partitions.
 2. 
 
 
 #############
 
 MYsql:
 sudo apt-get install mysql-workbench




 bin/kafka-console-consumer.sh  --bootstrap-server localhost:9092 --topic testAttribute  --from-beginning

 bin/kafka-console-producer.sh  --broker-list localhost:9092 --topic testAttribute


 kubectl create secret docker-registry k8smpf-docker --docker-server='https://index.docker.io/v1/' --docker-username=xaxisjenkins --docker-password='jenkins.xaxis' --namespace=sparkle


shell


 aws configure


 aws s3 ls s3://

 aws s3 cp --recursive source destination



 avg = total money / total share



 avg = total money /(previous share count + new share count)


 avg *  (previous share count + new share count) = total money 

new share count = (total money / avg) - previous share count


{"AttributeFileLocation":"gs://mp-data-ingestion-v1/Ford/Oracle/cookie/attribute.csv/ingestion_date=2019-12-19_03-29/", "vendor": "Oracle","owner": "Ford","idType": "mobile"}


./bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group sparkle-attributor-service

./bin/kafka-topics.sh --zookeeper kafka-zookeeper-1-na-prod.use1.mplatform.net --describe --topic sparkleAttributeFile

./bin/kafka-console-consumer.sh  --bootstrap-server localhost:9092 --topic testAttribute  --from-beginning

./bin/kafka-console-producer.sh  --broker-list localhost:9092 --topic testAttribute



